{"version":3,"file":"static/js/671.563d5377.chunk.js","mappings":"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","sources":["API/API.jsx","pages/HomePage/HomePageStyled.js","pages/MovieDatails/MovieDetailsStyled.js","pages/MovieDatails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '1cf55529396093bd7165d94d7485d292';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingData() {\n    const data = await axios.get(`${BASE_URL}trending/all/day?api_key=${API_KEY}`);\n    return data.data.results\n}\n\nexport async function fetchSearchData(query) {\n    const data = await axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`);\n    return data.data.results\n}\n\nexport async function fetchDataById(id) {\n    const data = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n    return data.data\n}\n\nexport async function fetchCastById(id) {\n    const data = await axios.get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\n    return data.data.cast\n}\n\nexport async function fetchReviewsById(id) {\n    const data = await axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n    return data.data.results\n}","import styled from 'styled-components';\n\nexport const PageWrapper = styled.div`\n  padding: 20px;\n`;\n\nexport const MainTitle = styled.h1`\n  margin: 0;\n  font-size: 40px;\n  color: #862d59;\n`;\n\nexport const ErrorText = styled.p`\n  margin: 30px;\n  font-size: 20px;\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const DetailsWrapper = styled.div`\n  padding: 10px 20px;\n`;\n\nexport const FilmInformation = styled.div`\n  display: flex;\n`;\n\nexport const FilmPoster = styled.img`\n  width: 400px;\n`;\n\nexport const Info = styled.div`\n  padding: 20px;\n`;\n\nexport const FilmTitle = styled.h1`\n  margin: 0;\n  color: #862d59;\n`;\n\nexport const FilmSubtitle = styled.h2`\n  margin: 0;\n  color: #862d59;\n`;\n\nexport const DetailsList = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n`;\n\nexport const DetailsLink = styled(NavLink)`\n  display: block;\n  width: fit-content;\n  padding: 10px;\n  color: black;\n\n  &.active {\n    font-size: larger;\n    color: #cc0066;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: #cc0066;\n  }\n`;\n\nexport const BackLink = styled(NavLink)`\n  display: block;\n  width: fit-content;\n  padding: 10px;\n  color: black;\n\n  :hover,\n  :focus {\n    color: #cc0066;\n  }\n`;\n","import React, { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\n\nimport { Loader } from \"components/Loader/Loader\";\nimport { fetchDataById } from 'API/API';\n\nimport { DetailsWrapper, FilmInformation, FilmPoster, Info, FilmTitle, FilmSubtitle, DetailsList, DetailsLink, BackLink } from './MovieDetailsStyled';\nimport { ErrorText } from '../HomePage/HomePageStyled'; \n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [state, setState] = useState(null);\n    const [error, setError] = useState(null);\n    const location = useLocation();\n\n    useEffect(() => {\n        const fetchMovie = async () => {\n            setError(null)\n            setState(null)\n\n        try {\n            const data = await fetchDataById(movieId)\n\n            setState(data)\n\n        } catch (error) {\n            setError(error)\n        }\n    }\n        fetchMovie();\n    }, [movieId])\n\n    if (!state) return null\n    \n    const { poster_path, title, vote_average, overview, genres } = state;\n    const isData = error || !state;\n\n    return (<DetailsWrapper>\n        {isData && <ErrorText>Oops! Something went wrong :( Please, choose another movie</ErrorText>}\n        <BackLink to={location.state?.from ?? '/'}>Go back</BackLink>\n        <FilmInformation>\n            <FilmPoster src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt=\"Film poster\" />\n            <Info>\n                <FilmTitle>{title}</FilmTitle>\n                    <p>User score: {vote_average}</p>\n                <FilmSubtitle>Overwiev</FilmSubtitle>\n                    <p>{overview}</p>\n                <FilmSubtitle>Genres</FilmSubtitle>\n                    <p>{genres.map(({name}) => `${name} `)}</p>\n            </Info>\n        </FilmInformation>\n        <h3>Additional information</h3>\n        <DetailsList>\n            <DetailsLink to=\"cast\">Cast</DetailsLink>\n            <DetailsLink to=\"reviews\">Rewievs</DetailsLink>\n        </DetailsList>\n        <Suspense  fallback={<Loader />}>\n            <Outlet />\n        </Suspense>\n        \n    </DetailsWrapper>\n    )\n}\n\nexport default MovieDetails"],"names":["API_KEY","BASE_URL","fetchTrendingData","axios","data","results","fetchSearchData","query","fetchDataById","id","fetchCastById","cast","fetchReviewsById","PageWrapper","styled","MainTitle","ErrorText","DetailsWrapper","FilmInformation","FilmPoster","Info","FilmTitle","FilmSubtitle","DetailsList","DetailsLink","NavLink","BackLink","movieId","useParams","useState","state","setState","error","setError","location","useLocation","useEffect","fetchMovie","poster_path","title","vote_average","overview","genres","isData","to","from","src","alt","map","name","Suspense","fallback","Loader"],"sourceRoot":""}