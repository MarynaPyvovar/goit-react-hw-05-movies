{"version":3,"file":"static/js/186.d61a370c.chunk.js","mappings":"8SAEMA,EAAU,mCACVC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACgBC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,oCAAiDD,IADjE,cACGI,EADH,yBAEIA,EAAKA,KAAKC,SAFd,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACgBJ,EAAAA,EAAAA,IAAA,UAAaF,EAAb,gCAA6CD,EAA7C,kBAA8DO,IAD9E,cACGH,EADH,yBAEIA,EAAKA,KAAKC,SAFd,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACgBN,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BQ,EAA9B,oBAA4CT,IAD5D,cACGI,EADH,yBAEIA,EAAKA,MAFT,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA6BD,GAA7B,uFACgBN,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BQ,EAA9B,4BAAoDT,IADpE,cACGI,EADH,yBAEIA,EAAKA,KAAKO,MAFd,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCH,GAAhC,uFACgBN,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BQ,EAA9B,4BAAoDT,IADpE,cACGI,EADH,yBAEIA,EAAKA,KAAKC,SAFd,kE,yGCcP,UAnCgB,WACZ,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,2FACfF,EAAS,MACTF,EAAW,MAFI,mBAKIL,EAAAA,EAAAA,IAAiBC,GALrB,OAKTT,EALS,OAOfa,EAAWb,GAPI,gDAUnBe,EAAS,EAAD,IAVW,yDAAH,qDAahBE,GACH,GAAE,CAACR,IAEJ,IAAMS,EAA6B,KAAb,OAAPN,QAAO,IAAPA,OAAA,EAAAA,EAASO,SAAgBL,EAExC,OAAQ,0BACHI,IAAU,uEADP,OAEHN,QAFG,IAEHA,OAFG,EAEHA,EAASQ,KAAI,gBAAEf,EAAF,EAAEA,GAAIgB,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OAA2B,2BACrC,oCAAYD,MACZ,uBAAIC,MAF0CjB,EAApC,MAOrB,C","sources":["API/API.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '1cf55529396093bd7165d94d7485d292';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingData() {\n    const data = await axios.get(`${BASE_URL}trending/all/day?api_key=${API_KEY}`);\n    return data.data.results\n}\n\nexport async function fetchSearchData(query) {\n    const data = await axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`);\n    return data.data.results\n}\n\nexport async function fetchDataById(id) {\n    const data = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n    return data.data\n}\n\nexport async function fetchCastById(id) {\n    const data = await axios.get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\n    return data.data.cast\n}\n\nexport async function fetchReviewsById(id) {\n    const data = await axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n    return data.data.results\n}","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviewsById } from 'API/API';\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchMovie = async () => {\n            setError(null)\n            setReviews(null)\n\n        try {\n            const data = await fetchReviewsById(movieId)\n\n            setReviews(data)\n\n        } catch (error) {\n        setError(error)\n        }\n    }\n        fetchMovie();\n    }, [movieId])\n\n    const isData = reviews?.length === 0 || error;\n\n    return (<ul>\n        {isData && <p>We don't have any reviews for this movie :(</p>}\n        {reviews?.map(({id, author, content}) => <li key={id}>\n            <p>Author: {author}</p>\n            <p>{content}</p>\n            </li>\n        )}\n    </ul>\n    )\n}\n\nexport default Reviews"],"names":["API_KEY","BASE_URL","fetchTrendingData","axios","data","results","fetchSearchData","query","fetchDataById","id","fetchCastById","cast","fetchReviewsById","movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchMovie","isData","length","map","author","content"],"sourceRoot":""}